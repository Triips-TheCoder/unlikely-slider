import styles from './styles.module.scss'
import renderingLoop from '../../script/renderingLoop'

class Slider {
    #state: number
    #numberOfSlide: number
    #unmount: boolean

    constructor() {
        this.#state = 0
        this.#numberOfSlide = 6
        this.#unmount = false
        this.#onMount()
    }

    public get state(): number {
        return this.#state
    }

    public render(): string {
        setTimeout(() => {
            this.#afterRender()
        }, 50)

        return `
          <button id='prev'>
            <svg width="64" height="63" viewBox="0 0 64 63" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd" clip-rule="evenodd" d="M5.64533 31.5L25.7173 15.1331L24 13.125L-1.90735e-06 32.8676L24 52.5L25.72 50.4945L5.64266 34.125L64 34.125V31.5L5.64533 31.5Z" fill="white"/>
            </svg>
          </button>
          <button id='next'>
            <svg width="64" height="63" viewBox="0 0 64 63" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path fill-rule="evenodd" clip-rule="evenodd" d="M58.3547 31.5L38.2827 47.8669L40 49.875L64 30.1324L40 10.5L38.28 12.5055L58.3573 28.875H0V31.5H58.3547Z" fill="white"/>
            </svg>
          </button>
          <svg class=${ styles.logo } viewBox="0 0 124 20" version="1.1"><title><fontsninja-text id="fontsninja-text-6" class="fontsninja-family-variant_times_400_normal">Logo_Unlikely_Black</fontsninja-text></title><desc><fontsninja-text id="fontsninja-text-7" class="fontsninja-family-variant_times_400_normal">Created with Sketch.</fontsninja-text></desc><g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="Desktop-HD" transform="translate(-72.000000, -72.000000)" fill="#FCFBF2"><g id="Logo_Unlikely_Black" transform="translate(72.000000, 72.000000)"><path d="M120.177215,4.91139241 L118.025316,11.443038 L117.974684,11.443038 L115.721519,4.91139241 L112.126582,4.91139241 L116.303797,15.6202532 L114.506329,19.9493671 L118.075949,19.9493671 L123.721519,4.93670886 L120.177215,4.93670886 L120.177215,4.91139241 Z M107.518987,16.1772152 L110.886076,16.1772152 L110.886076,1.16455696 L107.518987,1.16455696 L107.518987,16.1772152 Z M97.164557,9.29113924 L102.278481,9.29113924 C102.126582,8.63291139 101.468354,7.36708861 99.721519,7.36708861 C97.9746835,7.36708861 97.3164557,8.63291139 97.164557,9.29113924 Z M101.822785,12.6329114 L105.265823,12.6329114 C104.708861,13.8987342 103.924051,14.8607595 102.962025,15.5189873 C102.025316,16.1772152 100.911392,16.5316456 99.7468354,16.5316456 C96.5063291,16.5316456 93.7721519,13.9240506 93.7721519,10.556962 C93.7721519,7.41772152 96.2531646,4.50632911 99.6708861,4.50632911 C103.113924,4.50632911 105.620253,7.21518987 105.620253,10.6582278 C105.620253,11.1139241 105.56962,11.2911392 105.544304,11.5443038 L97.0886076,11.5443038 C97.2911392,12.8860759 98.4050633,13.6708861 99.721519,13.6708861 C100.810127,13.6962025 101.341772,13.2405063 101.822785,12.6329114 Z M82.5316456,16.1772152 L85.8987342,16.1772152 L85.8987342,10.7594937 L85.9493671,10.7594937 L89.1392405,16.1772152 L92.9620253,16.1772152 L88.835443,9.87341772 L93.0886076,4.91139241 L89.0886076,4.91139241 L85.9493671,8.98734177 L85.8987342,8.98734177 L85.8987342,1.13924051 L82.5316456,1.13924051 L82.5316456,16.1772152 Z M79.9746835,1.16455696 L76.6075949,1.16455696 L76.6075949,3.72151899 L79.9746835,3.72151899 L79.9746835,1.16455696 Z M79.9746835,4.91139241 L76.6075949,4.91139241 L76.6075949,16.1772152 L79.9746835,16.1772152 L79.9746835,4.91139241 Z M70.7848101,16.1772152 L74.1772152,16.1772152 L74.1772152,1.16455696 L70.8101266,1.16455696 L70.8101266,16.1772152 L70.7848101,16.1772152 Z M57.9746835,16.1772152 L61.3417722,16.1772152 L61.3417722,10.0506329 C61.3417722,9.36708861 61.3417722,7.69620253 63.2658228,7.69620253 C65.0379747,7.69620253 65.0379747,9.24050633 65.0379747,10.0253165 L65.0379747,16.1772152 L68.4050633,16.1772152 L68.4050633,9.13924051 C68.4050633,6.93670886 67.721519,6.02531646 67.1139241,5.49367089 C66.5063291,4.96202532 65.3164557,4.53164557 64.2278481,4.53164557 C62.2278481,4.53164557 61.5189873,5.56962025 61.164557,6.12658228 L61.1139241,6.12658228 L61.1139241,4.93670886 L57.9746835,4.93670886 L57.9746835,16.1772152 Z M55.5189873,4.91139241 L52.1518987,4.91139241 L52.1518987,11.1139241 C52.1518987,12.9113924 51.1898734,13.4177215 50.2278481,13.4177215 C48.4303797,13.4177215 48.4303797,11.9240506 48.4303797,11.164557 L48.4303797,4.91139241 L45.0632911,4.91139241 L45.0632911,11.6455696 C45.0632911,13.1898734 45.1898734,14 46.0759494,15.1139241 C47.0632911,16.3797468 48.6835443,16.5316456 49.3924051,16.5316456 C50.2531646,16.5316456 51.6202532,16.4050633 52.3037975,14.9620253 L52.3544304,14.9620253 L52.3544304,16.1518987 L55.5443038,16.1518987 L55.5443038,4.91139241 L55.5189873,4.91139241 Z" id="Shape"></path><g id="Group"><path d="M0,9.64556962 L0,19.2658228 L9.62025316,19.2658228 C4.30379747,19.2658228 0,14.9620253 0,9.64556962 Z" id="Shape"></path><path d="M9.62025316,19.2658228 L19.2405063,19.2658228 L19.2405063,9.64556962 C19.2405063,14.9620253 14.9367089,19.2658228 9.62025316,19.2658228 Z" id="Shape"></path><path d="M9.62025316,0.0253164557 L0,0.0253164557 L0,9.64556962 C0,4.32911392 4.30379747,0.0253164557 9.62025316,0.0253164557 Z" id="Shape"></path><path d="M9.62025316,0.0253164557 C14.9367089,0.0253164557 19.2405063,4.32911392 19.2405063,9.64556962 L19.2405063,0.0253164557 L9.62025316,0.0253164557 Z" id="Shape"></path></g><path d="M28.8607595,0.0253164557 C27.8481013,0.0253164557 26.8860759,0.17721519 25.9746835,0.455696203 L31.721519,0.455696203 C30.835443,0.17721519 29.8734177,0.0253164557 28.8607595,0.0253164557 Z M28.8607595,19.2658228 C29.8481013,19.2658228 30.835443,19.1139241 31.721519,18.835443 L25.9746835,18.835443 C26.8860759,19.1139241 27.8481013,19.2658228 28.8607595,19.2658228 Z M24,17.9493671 L33.721519,17.9493671 C34.1772152,17.6962025 34.5822785,17.3924051 34.9873418,17.0886076 L22.7594937,17.0886076 C23.1392405,17.3924051 23.5696203,17.6962025 24,17.9493671 Z M21.8227848,16.2025316 L35.9240506,16.2025316 C36.1772152,15.9240506 36.4303797,15.6455696 36.6582278,15.3164557 L21.0886076,15.3164557 C21.3164557,15.6202532 21.5696203,15.9240506 21.8227848,16.2025316 Z M20.5063291,14.4556962 L37.1898734,14.4556962 C37.3670886,14.1772152 37.4936709,13.8734177 37.6455696,13.5696203 L20.0759494,13.5696203 C20.2025316,13.8734177 20.3544304,14.1772152 20.5063291,14.4556962 Z M19.721519,12.7088608 L37.9746835,12.7088608 C38.0759494,12.4303797 38.1518987,12.1265823 38.2278481,11.8481013 L19.4936709,11.8481013 C19.5443038,12.1265823 19.6202532,12.4050633 19.721519,12.7088608 Z M19.3164557,10.9367089 L38.4050633,10.9367089 C38.4556962,10.6582278 38.4810127,10.3544304 38.4810127,10.0506329 L19.2405063,10.0506329 C19.2658228,10.3797468 19.2911392,10.6582278 19.3164557,10.9367089 Z M33.721519,1.3164557 L24,1.3164557 C23.5443038,1.56962025 23.1392405,1.87341772 22.7341772,2.20253165 L34.9620253,2.20253165 C34.5822785,1.87341772 34.1518987,1.59493671 33.721519,1.3164557 Z M35.8987342,3.08860759 L21.8227848,3.08860759 C21.5696203,3.36708861 21.3164557,3.64556962 21.0886076,3.97468354 L36.6329114,3.97468354 C36.4050633,3.64556962 36.1518987,3.34177215 35.8987342,3.08860759 Z M37.1898734,4.83544304 L20.5063291,4.83544304 C20.3544304,5.11392405 20.2025316,5.41772152 20.0506329,5.72151899 L37.6202532,5.72151899 C37.5189873,5.39240506 37.3670886,5.11392405 37.1898734,4.83544304 Z M38,6.58227848 L19.721519,6.58227848 C19.6202532,6.86075949 19.5443038,7.16455696 19.4683544,7.46835443 L38.2278481,7.46835443 C38.1772152,7.16455696 38.0759494,6.86075949 38,6.58227848 Z M38.4050633,8.32911392 L19.3164557,8.32911392 C19.2658228,8.60759494 19.2405063,8.91139241 19.2405063,9.21518987 L38.4810127,9.21518987 C38.4810127,8.91139241 38.4303797,8.60759494 38.4050633,8.32911392 Z" id="Shape" fill-rule="nonzero"></path></g></g></g></svg>
          <button id="unmount">Unmount Component</button>
          <p class=${ styles.total }>${ this.#isLastSlide() ? this.#numberOfSlide : (this.#state + 1) % this.#numberOfSlide } / 6</p>
          <div class=${ styles.test }>
            <div class=${ styles.container }>
               <div class=${ styles.slider } style='transform:translate3d(-${ 64 * (this.#state % this.#numberOfSlide) }rem, 0, 0)'>
                   <img src="images/slider-1.jpg" alt="photo d'une architecture moderne" class='${ styles.sliderImage }'/>
                   <img src="images/slider-2.jpg" alt="" class='${ styles.sliderImage }'/>
                   <img src="images/slider-3.jpg" alt="" class='${ styles.sliderImage }'/>
                   <img src="images/slider-4.jpg" alt="" class='${ styles.sliderImage }'/>
                   <img src="images/slider-5.jpg" alt="" class='${ styles.sliderImage }'/>
                   <img src="images/slider-6.jpg" alt="" class='${ styles.sliderImage }'/>
              </div>
            </div>
          </div>
        `
    }

    #onMount() {
        console.log('composant monté')
    }

    #onUnmount() {
        alert('composant démonté')
    }

    #isLastSlide(): boolean {
        return this.#state % this.#numberOfSlide === this.#numberOfSlide - 1
    }

    #afterRender(): void {
        const nextBtn = document.querySelector('#next') as HTMLButtonElement
        const previousBtn = document.querySelector('#prev') as HTMLButtonElement
        const unmount = document.querySelector('#unmount') as HTMLButtonElement

        nextBtn.onclick = () =>
            this.#setState(++this.#state)

        previousBtn.onclick = () => {
            this.#state === 0
                ? this.#setState(this.#numberOfSlide - 1)
                : this.#setState(--this.#state)
        }

        unmount.onclick = () => {
            this.#unmount = true
            this.#onUnmount()
        }

    }

    get unmount(): boolean {
        return this.#unmount
    }

    #setState(nextState: number): void {
        this.#state = nextState
    }
}

const SliderComp = new Slider()

renderingLoop.addComponent(SliderComp)
export default SliderComp
